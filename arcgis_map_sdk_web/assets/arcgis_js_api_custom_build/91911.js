"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[91911,58340],{58340:(e,n,t)=>{t.d(n,{c:()=>r,g:()=>i});var r="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}},4279:(e,n,t)=>{t.d(n,{A:()=>z,B:()=>V,C:()=>j,D:()=>k,E:()=>E,F:()=>H,G:()=>I,H:()=>_,I:()=>C,J:()=>q,K:()=>B,L:()=>P,M:()=>M,N:()=>O,a:()=>u,b:()=>f,c:()=>o,d:()=>a,e:()=>c,f:()=>l,g:()=>F,h:()=>s,i:()=>p,j:()=>g,k:()=>y,l:()=>m,m:()=>b,n:()=>x,o:()=>N,p:()=>D,q:()=>v,r:()=>h,s:()=>w,t:()=>d,u:()=>S,v:()=>R,w:()=>G,x:()=>T,y:()=>A,z:()=>L});var r=t(89067),i=t(61107);function c(e){return r.G.extendedSpatialReferenceInfo(e)}function o(e,n,t){return r.G.clip(i.N,e,n,t)}function u(e,n,t){return r.G.cut(i.N,e,n,t)}function f(e,n,t){return r.G.contains(i.N,e,n,t)}function a(e,n,t){return r.G.crosses(i.N,e,n,t)}function l(e,n,t,c){return r.G.distance(i.N,e,n,t,c)}function s(e,n,t){return r.G.equals(i.N,e,n,t)}function p(e,n,t){return r.G.intersects(i.N,e,n,t)}function d(e,n,t){return r.G.touches(i.N,e,n,t)}function G(e,n,t){return r.G.within(i.N,e,n,t)}function g(e,n,t){return r.G.disjoint(i.N,e,n,t)}function N(e,n,t){return r.G.overlaps(i.N,e,n,t)}function h(e,n,t,c){return r.G.relate(i.N,e,n,t,c)}function y(e,n){return r.G.isSimple(i.N,e,n)}function w(e,n){return r.G.simplify(i.N,e,n)}function m(e,n,t=!1){return r.G.convexHull(i.N,e,n,t)}function b(e,n,t){return r.G.difference(i.N,e,n,t)}function x(e,n,t){return r.G.symmetricDifference(i.N,e,n,t)}function D(e,n,t){return r.G.intersect(i.N,e,n,t)}function S(e,n,t=null){return r.G.union(i.N,e,n,t)}function v(e,n,t,c,o,u,f){return r.G.offset(i.N,e,n,t,c,o,u,f)}function R(e,n,t,c,o=!1){return r.G.buffer(i.N,e,n,t,c,o)}function T(e,n,t,c,o,u,f){return r.G.geodesicBuffer(i.N,e,n,t,c,o,u,f)}function A(e,n,t,c=!0){return r.G.nearestCoordinate(i.N,e,n,t,c)}function L(e,n,t){return r.G.nearestVertex(i.N,e,n,t)}function z(e,n,t,c,o){return r.G.nearestVertices(i.N,e,n,t,c,o)}function V(e,n,t,i){if(null==n||null==i)throw new Error("Illegal Argument Exception");const c=r.G.rotate(n,t,i);return c.spatialReference=e,c}function j(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const i=r.G.flipHorizontal(n,t);return i.spatialReference=e,i}function k(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const i=r.G.flipVertical(n,t);return i.spatialReference=e,i}function E(e,n,t,c,o){return r.G.generalize(i.N,e,n,t,c,o)}function H(e,n,t,c){return r.G.densify(i.N,e,n,t,c)}function I(e,n,t,c,o=0){return r.G.geodesicDensify(i.N,e,n,t,c,o)}function _(e,n,t){return r.G.planarArea(i.N,e,n,t)}function C(e,n,t){return r.G.planarLength(i.N,e,n,t)}function q(e,n,t,c){return r.G.geodesicArea(i.N,e,n,t,c)}function B(e,n,t,c){return r.G.geodesicLength(i.N,e,n,t,c)}function P(e,n,t){return null==n||null==t?[]:r.G.intersectLinesToPoints(i.N,e,n,t)}function M(e,n){r.G.changeDefaultSpatialReferenceTolerance(e,n)}function O(e){r.G.clearDefaultSpatialReferenceTolerance(e)}const F=Object.freeze(Object.defineProperty({__proto__:null,buffer:R,changeDefaultSpatialReferenceTolerance:M,clearDefaultSpatialReferenceTolerance:O,clip:o,contains:f,convexHull:m,crosses:a,cut:u,densify:H,difference:b,disjoint:g,distance:l,equals:s,extendedSpatialReferenceInfo:c,flipHorizontal:j,flipVertical:k,generalize:E,geodesicArea:q,geodesicBuffer:T,geodesicDensify:I,geodesicLength:B,intersect:D,intersectLinesToPoints:P,intersects:p,isSimple:y,nearestCoordinate:A,nearestVertex:L,nearestVertices:z,offset:v,overlaps:N,planarArea:_,planarLength:C,relate:h,rotate:V,simplify:w,symmetricDifference:x,touches:d,union:S,within:G},Symbol.toStringTag,{value:"Module"}))},8923:(e,n,t)=>{t.r(n),t.d(n,{buffer:()=>r.v,changeDefaultSpatialReferenceTolerance:()=>r.M,clearDefaultSpatialReferenceTolerance:()=>r.N,clip:()=>r.c,contains:()=>r.b,convexHull:()=>r.l,crosses:()=>r.d,cut:()=>r.a,densify:()=>r.F,difference:()=>r.m,disjoint:()=>r.j,distance:()=>r.f,equals:()=>r.h,extendedSpatialReferenceInfo:()=>r.e,flipHorizontal:()=>r.C,flipVertical:()=>r.D,generalize:()=>r.E,geodesicArea:()=>r.J,geodesicBuffer:()=>r.x,geodesicDensify:()=>r.G,geodesicLength:()=>r.K,intersect:()=>r.p,intersectLinesToPoints:()=>r.L,intersects:()=>r.i,isSimple:()=>r.k,nearestCoordinate:()=>r.y,nearestVertex:()=>r.z,nearestVertices:()=>r.A,offset:()=>r.q,overlaps:()=>r.o,planarArea:()=>r.H,planarLength:()=>r.I,relate:()=>r.r,rotate:()=>r.B,simplify:()=>r.s,symmetricDifference:()=>r.n,touches:()=>r.t,union:()=>r.u,within:()=>r.w});t(89067),t(61107);var r=t(4279)}}]);