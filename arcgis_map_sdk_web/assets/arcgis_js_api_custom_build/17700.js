"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[17700,48427],{48427:(e,t,n)=>{n.r(t),n.d(t,{hydratedAdapter:()=>u});var r=n(91772),a=n(74304),i=n(10186),c=n(89542),o=n(90819);const u={convertToGEGeometry:function(e,t){if(null==t)return null;let n="cache"in t?t.cache._geVersion:void 0;return null==n&&(n=e.convertJSONToGeometry(t),"cache"in t&&(t.cache._geVersion=n)),n},exportPoint:function(e,t,n){const r=e.hasZ(t),a=e.hasM(t),c=new i.Z({x:e.getPointX(t),y:e.getPointY(t),spatialReference:n});return r&&(c.z=e.getPointZ(t)),a&&(c.m=e.getPointM(t)),c.cache._geVersion=t,c},exportPolygon:function(e,t,n){const r=new c.Z({rings:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return r.cache._geVersion=t,r},exportPolyline:function(e,t,n){const r=new o.Z({paths:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:n});return r.cache._geVersion=t,r},exportMultipoint:function(e,t,n){const r=new a.Z({hasZ:e.hasZ(t),hasM:e.hasM(t),points:e.exportPoints(t),spatialReference:n});return r.cache._geVersion=t,r},exportExtent:function(e,t,n){const a=e.hasZ(t),i=e.hasM(t),c=new r.Z({xmin:e.getXMin(t),ymin:e.getYMin(t),xmax:e.getXMax(t),ymax:e.getYMax(t),spatialReference:n});if(a){const n=e.getZExtent(t);c.zmin=n.vmin,c.zmax=n.vmax}if(i){const n=e.getMExtent(t);c.mmin=n.vmin,c.mmax=n.vmax}return c.cache._geVersion=t,c}}},17700:(e,t,n)=>{n.r(t),n.d(t,{buffer:()=>_,changeDefaultSpatialReferenceTolerance:()=>B,clearDefaultSpatialReferenceTolerance:()=>W,clip:()=>d,contains:()=>l,convexHull:()=>Z,crosses:()=>p,cut:()=>f,densify:()=>N,difference:()=>v,disjoint:()=>g,distance:()=>h,equals:()=>M,extendedSpatialReferenceInfo:()=>s,flipHorizontal:()=>J,flipVertical:()=>C,generalize:()=>H,geodesicArea:()=>Y,geodesicBuffer:()=>D,geodesicDensify:()=>O,geodesicLength:()=>j,intersect:()=>V,intersectLinesToPoints:()=>q,intersects:()=>y,isSimple:()=>w,nearestCoordinate:()=>z,nearestVertex:()=>b,nearestVertices:()=>k,offset:()=>T,overlaps:()=>x,planarArea:()=>I,planarLength:()=>X,relate:()=>m,rotate:()=>L,simplify:()=>R,symmetricDifference:()=>S,touches:()=>G,union:()=>P,within:()=>A});var r=n(7283),a=n(93138),i=n(89067),c=n(14685),o=n(48427);function u(e){const t=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return t?(0,r.TJ)(c.Z,t):c.Z.WGS84}function s(e){return i.G.extendedSpatialReferenceInfo(e)}function d(e,t){return(0,a.M)(e),i.G.clip(o.hydratedAdapter,u(e),e,t)}function f(e,t){return(0,a.M)(e),i.G.cut(o.hydratedAdapter,u(e),e,t)}function l(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.contains(o.hydratedAdapter,u(e),e,t)}function p(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.crosses(o.hydratedAdapter,u(e),e,t)}function h(e,t,n){return(0,a.M)(e),(0,a.M)(t),i.G.distance(o.hydratedAdapter,u(e),e,t,n)}function M(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.equals(o.hydratedAdapter,u(e),e,t)}function y(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.intersects(o.hydratedAdapter,u(e),e,t)}function G(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.touches(o.hydratedAdapter,u(e),e,t)}function A(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.within(o.hydratedAdapter,u(e),e,t)}function g(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.disjoint(o.hydratedAdapter,u(e),e,t)}function x(e,t){return(0,a.M)(e),(0,a.M)(t),i.G.overlaps(o.hydratedAdapter,u(e),e,t)}function m(e,t,n){return(0,a.M)(e),(0,a.M)(t),i.G.relate(o.hydratedAdapter,u(e),e,t,n)}function w(e){return(0,a.M)(e),i.G.isSimple(o.hydratedAdapter,u(e),e)}function R(e){return(0,a.M)(e),i.G.simplify(o.hydratedAdapter,u(e),e)}function Z(e,t=!1){return i.G.convexHull(o.hydratedAdapter,u(e),e,t)}function v(e,t){return(0,a.M)(t),i.G.difference(o.hydratedAdapter,u(e),e,t)}function S(e,t){return(0,a.M)(t),i.G.symmetricDifference(o.hydratedAdapter,u(e),e,t)}function V(e,t){return(0,a.M)(t),i.G.intersect(o.hydratedAdapter,u(e),e,t)}function P(e){return i.G.union(o.hydratedAdapter,u(e),e)}function T(e,t,n,r,a,c){return i.G.offset(o.hydratedAdapter,u(e),e,t,n,r,a,c)}function _(e,t,n,r=!1){return i.G.buffer(o.hydratedAdapter,u(e),e,t,n,r)}function D(e,t,n,r,a,c){return i.G.geodesicBuffer(o.hydratedAdapter,u(e),e,t,n,r,a,c)}function z(e,t,n=!0){return(0,a.M)(e),i.G.nearestCoordinate(o.hydratedAdapter,u(e),e,t,n)}function b(e,t){return(0,a.M)(e),i.G.nearestVertex(o.hydratedAdapter,u(e),e,t)}function k(e,t,n,r){return(0,a.M)(e),i.G.nearestVertices(o.hydratedAdapter,u(e),e,t,n,r)}function E(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function L(e,t,n){if(null==e)throw new F;const r=e.spatialReference;if(null==(n=n??E(e)))throw new F;const a=e.constructor.fromJSON(i.G.rotate(e,t,n));return a.spatialReference=r,a}function J(e,t){if(null==e)throw new F;const n=e.spatialReference;if(null==(t=t??E(e)))throw new F;const r=e.constructor.fromJSON(i.G.flipHorizontal(e,t));return r.spatialReference=n,r}function C(e,t){if(null==e)throw new F;const n=e.spatialReference;if(null==(t=t??E(e)))throw new F;const r=e.constructor.fromJSON(i.G.flipVertical(e,t));return r.spatialReference=n,r}function H(e,t,n,r){return(0,a.M)(e),i.G.generalize(o.hydratedAdapter,u(e),e,t,n,r)}function N(e,t,n){return(0,a.M)(e),i.G.densify(o.hydratedAdapter,u(e),e,t,n)}function O(e,t,n,r=0){return(0,a.M)(e),i.G.geodesicDensify(o.hydratedAdapter,u(e),e,t,n,r)}function I(e,t){return(0,a.M)(e),i.G.planarArea(o.hydratedAdapter,u(e),e,t)}function X(e,t){return(0,a.M)(e),i.G.planarLength(o.hydratedAdapter,u(e),e,t)}function Y(e,t,n){return(0,a.M)(e),i.G.geodesicArea(o.hydratedAdapter,u(e),e,t,n)}function j(e,t,n){return(0,a.M)(e),i.G.geodesicLength(o.hydratedAdapter,u(e),e,t,n)}function q(e,t){return i.G.intersectLinesToPoints(o.hydratedAdapter,u(e),e,t)}function B(e,t){i.G.changeDefaultSpatialReferenceTolerance(e,t)}function W(e){i.G.clearDefaultSpatialReferenceTolerance(e)}class F extends Error{constructor(){super("Illegal Argument Exception")}}}}]);