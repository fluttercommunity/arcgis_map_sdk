"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[60770],{60770:(e,t,s)=>{s.r(t),s.d(t,{FeatureTileTree3DDebugger:()=>c});var i=s(36663),l=s(76868),r=s(81977),o=(s(39994),s(13802),s(4157),s(40266)),a=s(98940),n=s(89542),h=s(49939);let c=class extends h.q{get updating(){return this._watchUpdatingTracking?.updating??!1}constructor(e){super(e),this._watchUpdatingTracking=new a.R}initialize(){const{featureTiles:e}=this.view;this.addHandles(e.addClient()),this._watchUpdatingTracking.addOnCollectionChange((()=>e?.tiles),(()=>this.update()),l.initial)}destroy(){this._watchUpdatingTracking.destroy()}getTiles(){const e=e=>{const[t,s,i]=e.lij;return n.Z.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(t,s,i))};return this.view.featureTiles.tiles.toArray().sort(((e,t)=>e.loadPriority-t.loadPriority)).map((t=>({...t,level:t.level,geometry:e(t)})))}};(0,i._)([(0,r.Cb)()],c.prototype,"_watchUpdatingTracking",void 0),(0,i._)([(0,r.Cb)()],c.prototype,"updating",null),(0,i._)([(0,r.Cb)()],c.prototype,"view",void 0),c=(0,i._)([(0,o.j)("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],c)},49939:(e,t,s)=>{s.d(t,{q:()=>v});var i=s(36663),l=s(30936),r=s(80085),o=s(74396),a=s(41831),n=s(19431),h=s(81977),c=(s(39994),s(13802),s(4157),s(40266)),d=s(60378),g=s(43411),p=s(27624),y=s(69996),u=s(62179),b=s(73159),w=s(2571);const _=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let v=class extends o.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=_.map((e=>new g.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=this.getTiles(),t=new Array,s=new Set((this._labels.size,this._labels.keys()));e.forEach(((i,o)=>{const h=i.lij.toString();s.delete(h);const c=i.measures?.lodLevel??i.level,g=i.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const e=new r.Z({geometry:g,symbol:this._symbols[c%this._symbols.length]});this._polygons.set(h,e),t.push(e)}if(this.enableLabels){const s=(e=>{if(null!=e.label)return e.label;let t=e.lij.toString();return null!=e.loadPriority&&(t+=` (${e.loadPriority})`),e.measures&&(t+=`[${e.measures.lodLevel}]`),t})(i),c=o/(e.length-1),_=(0,n.t7)(0,200,c),v=(0,n.t7)(20,6,c)/.75,m=null!=i.loadPriority&&i.loadPriority>=e.length,f=new l.Z([_,m?0:_,m?0:_]),T="3d"===this.view.type?()=>new d.Z({verticalOffset:new w.Z({screenLength:40/.75}),callout:new u.Z({color:new l.Z("white"),border:new b.Z({color:new l.Z("black")})}),symbolLayers:new a.Z([new y.Z({text:s,halo:{color:"white",size:1/.75},material:{color:f},size:v})])}):()=>new p.Z({text:s,haloColor:"white",haloSize:1/.75,color:f,size:v}),Z=this._labels.get(h);if(Z){const e=T();null!=Z.symbol&&JSON.stringify(e)===JSON.stringify(Z.symbol)||(Z.symbol=e)}else{const e=new r.Z({geometry:g.extent.center,symbol:T()});this._labels.set(h,e),t.push(e)}}}));const i=new Array;s.forEach((e=>{const t=this._polygons.get(e);null!=t&&(i.push(t),this._polygons.delete(e));const s=this._labels.get(e);null!=s&&(i.push(s),this._labels.delete(e))})),this.view.graphics.removeMany(i),this.view.graphics.addMany(t)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,i._)([(0,h.Cb)({constructOnly:!0})],v.prototype,"view",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],v.prototype,"updating",void 0),(0,i._)([(0,h.Cb)()],v.prototype,"enabled",null),v=(0,i._)([(0,c.j)("esri.views.support.TileTreeDebugger")],v)}}]);