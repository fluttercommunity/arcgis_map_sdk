"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[33894],{33894:(t,e,r)=>{r.r(e),r.d(e,{executeAttributeBinsQuery:()=>y});var n=r(84238),s=r(66341),i=r(3466),a=r(53736),u=r(29927),o=r(35925),l=r(27707);function c(t){const e=t.geometry,r=t.toJSON(),n=r;let s,i,u;if(null!=e&&(i=e.spatialReference,u=(0,o.B9)(i),n.geometryType=(0,a.Ji)(e),n.geometry=JSON.stringify(e),n.inSR=u),r.outSR?(n.outSR=(0,o.B9)(r.outSR),s=t.outSpatialReference):e&&(n.outSR=n.inSR,s=i),n.bin&&=JSON.stringify(n.bin),n.quantizationParameters&&=JSON.stringify(n.quantizationParameters),n.outStatistics&&=JSON.stringify(n.outStatistics),n.outTimeReference&&=JSON.stringify(n.outTimeReference),r.timeExtent){const t=r.timeExtent,{start:e,end:s}=t;null==e&&null==s||(n.time=e===s?e:`${e??"null"},${s??"null"}`),delete r.timeExtent}return t.defaultSpatialReference&&(0,o.fS)(i,s)&&(n.defaultSR=n.inSR,delete n.inSR,delete n.outSR),n}async function f(t,e,r){return null!=e.timeExtent&&e.timeExtent.isEmpty?{data:{features:[]}}:await async function(t,e,r={}){const n="string"==typeof t?(0,i.mN)(t):t,a=e.geometry?[e.geometry]:[],o=await(0,u.aX)(a,null,{signal:r.signal}),f=o?.[0];null!=f&&((e=e.clone()).geometry=f);const S=(0,l.A)({...n.query,f:"json",...c(e)});return(0,s.Z)((0,i.v_)(n.path,"queryBins"),{...r,query:{...S,...r.query}})}(t,e,r)}var S=r(98481),p=r(41860);async function y(t,e,r){const{data:s}=await f((0,n.en)(t),p.default.from(e),r);return S.Z.fromJSON(s)}},98481:(t,e,r)=>{r.d(e,{Z:()=>d});var n,s=r(36663),i=r(80085),a=r(41151),u=r(67134),o=r(81977),l=(r(39994),r(13802),r(40266));let c=n=class extends(a.Z.ClonableMixin(i.Z)){constructor(t){super(t),this.stackedAttributes=null}cloneShallow(){return new n({...super.cloneShallow(),stackedAttributes:this.stackedAttributes})}toJSON(){return{...super.toJSON(),stackedAttributes:(0,u.d9)(this.stackedAttributes)}}};(0,s._)([(0,o.Cb)()],c.prototype,"stackedAttributes",void 0),c=n=(0,s._)([(0,l.j)("esri.AttributeBinsGraphic")],c);const f=c;r(4157);var S=r(34248),p=r(51211);let y=class extends(a.Z.ClonableMixin(p.Z)){constructor(){super(...arguments),this.features=[]}readFeatures(t,e){return this.readFeaturesWithClass(t,e,f)}};(0,s._)([(0,o.Cb)({type:[f],json:{write:!0}})],y.prototype,"features",void 0),(0,s._)([(0,S.r)("features")],y.prototype,"readFeatures",null),y=(0,s._)([(0,l.j)("esri.rest.support.AttributeBinsFeatureSet")],y);const d=y}}]);