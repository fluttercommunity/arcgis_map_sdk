"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[19091],{19091:(e,r,t)=>{t.r(r),t.d(r,{BufferObject:()=>n.f,FramebufferObject:()=>s.X,Program:()=>o.$,ProgramCache:()=>a.G,Renderbuffer:()=>i.r,ShaderCompiler:()=>c.B,Texture:()=>f.x,VertexArrayObject:()=>l.U,createProgram:()=>d.H,glslifyDefineMap:()=>u.K});var n=t(78951),s=t(18567),o=t(69609),a=t(18636),i=t(37165),c=t(78311),f=t(43487),l=t(29620),u=t(73353),d=t(84172)},84172:(e,r,t)=>{t.d(r,{H:()=>s});var n=t(69609);function s(e,r,t=""){return new n.$(e,t+r.shaders.vertexShader,t+r.shaders.fragmentShader,r.attributes)}},78311:(e,r,t)=>{t.d(r,{B:()=>n});class n{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,r=new Map){if(r.has(e))return r.get(e);const t=this._read(e);if(!t)throw new Error(`cannot find shader file ${e}`);const n=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let s=n.exec(t);const o=[];for(;null!=s;)o.push({path:s[1],start:s.index,length:s[0].length}),s=n.exec(t);let a=0,i="";return o.forEach((e=>{i+=t.slice(a,e.start),i+=r.has(e.path)?"":this._resolve(e.path,r),a=e.start+e.length})),i+=t.slice(a),r.set(e,i),i}_read(e){return this._readFile(e)}}},73353:(e,r,t)=>{function n(e){const{options:r,value:t}=e;return"number"==typeof r[t]}function s(e){let r="";for(const t in e){const s=e[t];if("boolean"==typeof s)s&&(r+=`#define ${t}\n`);else if("number"==typeof s)r+=`#define ${t} ${s.toFixed()}\n`;else if("object"==typeof s)if(n(s)){const{value:e,options:n,namespace:o}=s,a=o?`${o}_`:"";for(const e in n)r+=`#define ${a}${e} ${n[e].toFixed()}\n`;r+=`#define ${t} ${a}${e}\n`}else{const e=s.options;let n=0;for(const t in e)r+=`#define ${e[t]} ${(n++).toFixed()}\n`;r+=`#define ${t} ${e[s.value]}\n`}}return r}t.d(r,{K:()=>s})}}]);