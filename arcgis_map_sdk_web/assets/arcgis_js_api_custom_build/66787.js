"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[66787],{66787:(e,r,t)=>{t.r(r),t.d(r,{RouteLayerInteraction:()=>m});var a=t(36663),i=t(74396),s=t(23148),o=t(61681),l=t(76868),n=t(81977),c=(t(39994),t(13802),t(4157),t(40266)),p=t(98940),h=t(45857),y=t(6199),d=t(52182),g=t(79259),u=t(76045),b=t(94203);function w(e,r){e.networkFeature=r}function _(e){return e.networkFeature}function k(e){return"point"===e?.type||"polyline"===e?.type||"polygon"===e?.type}let m=class extends i.Z{constructor(e){super(e),this._createMode=null,this._graphicsLayer=new h.Z({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new p.R,this.enabled=!0,this._handleSketchViewModelEvents=async e=>{switch(e.type){case"update":switch(e.state){case"active":case"complete":for(const r of e.graphics)_(r).geometry=k(r.geometry)?r.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const r of e.graphics){const e=_(r);this._removeNetworkFeature(e)}break;case"create":if(e.graphic&&"complete"===e.state&&this._createMode){const r=e.graphic.geometry?.clone(),t=e.graphic.symbol?.clone();if(!r)break;switch(this._createMode){case"stop":{if("point"!==r.type)break;const{stops:t}=this.layer;if(t.length>0&&t.every((({geometry:e})=>!e))){t.at(0).geometry=r;break}if(t.length>1&&t.filter(((e,r)=>0!==r)).every((({geometry:e})=>!e))){t.at(1).geometry=r;break}const a=new u.Z({geometry:r});t.add(a),w(e.graphic,a);break}case"point-barrier":{if("point"!==r.type)break;const a=new y.Z({geometry:r,symbol:t});this.layer.pointBarriers.add(a),w(e.graphic,a);break}case"polyline-barrier":{if("polyline"!==r.type)break;const a=new g.Z({geometry:r,symbol:t});this.layer.polylineBarriers.add(a),w(e.graphic,a);break}case"polygon-barrier":{if("polygon"!==r.type)break;const a=new d.Z({geometry:r,symbol:t});this.layer.polygonBarriers.add(a),w(e.graphic,a);break}}}}(await this.view.whenLayerView(this.layer)).emit(e.type,"create"===e.type?function(e){const r=_(e.graphic);return{...e,networkFeature:r}}(e):function(e){const r=e.graphics.map((e=>_(e)));return{...e,networkFeatures:r}}(e))}}initialize(){this._sketchViewModel=new b.Z({layer:this._graphicsLayer,view:this.view}),this.addHandles([(0,l.watch)((()=>this.enabled),(e=>{e?this._activate():this._deactivate()}),l.initial),(0,l.watch)((()=>{const{stops:e,pointBarriers:r,polylineBarriers:t,polygonBarriers:a}=this.layer;return{stops:e,pointBarriers:r,polylineBarriers:t,polygonBarriers:a}}),(()=>{this.enabled&&this._loadClonedGraphics()})),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),(0,s.ed)(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=(0,o.SC)(this._graphicsLayer),this._sketchViewModel=(0,o.SC)(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map((e=>_(e)))}get updating(){return this._updatingHandles.updating}create(e){switch(this._createMode=e,e){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(e){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(e){const r=this._graphicsLayer.graphics.find((r=>_(r)===e));r&&this._graphicsLayer.remove(r),this._removeNetworkFeature(e)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const e=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap((e=>e.toArray().map((e=>{const r=e.toGraphic();return r.networkFeature=e,r}))));this._graphicsLayer.removeAll().addMany(e)}_removeNetworkFeature(e){switch(e.type){case"stop":this.layer.stops.remove(e);break;case"point-barrier":this.layer.pointBarriers.remove(e);break;case"polyline-barrier":this.layer.polylineBarriers.remove(e);break;case"polygon-barrier":this.layer.polygonBarriers.remove(e)}}};(0,a._)([(0,n.Cb)()],m.prototype,"enabled",void 0),(0,a._)([(0,n.Cb)({constructOnly:!0})],m.prototype,"layer",void 0),(0,a._)([(0,n.Cb)({readOnly:!0})],m.prototype,"selectedNetworkFeatures",null),(0,a._)([(0,n.Cb)()],m.prototype,"updating",null),(0,a._)([(0,n.Cb)({constructOnly:!0})],m.prototype,"view",void 0),m=(0,a._)([(0,c.j)("esri.views.2d.layers.support.RouteLayerInteraction")],m)}}]);