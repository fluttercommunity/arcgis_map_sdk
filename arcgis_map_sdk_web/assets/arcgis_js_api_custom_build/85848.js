"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[85848,44629,85645,95621,92403,70230,97548],{89849:(e,t,s)=>{s.r(t),s.d(t,{default:()=>_});var r=s(36663),o=s(70375),i=s(78668),n=s(3466),a=s(81977),p=s(39994),u=(s(13802),s(4157),s(34248)),l=s(40266),d=s(14685),c=s(12926),y=s(68309),h=s(62517),f=s(91772),m=s(51211);let g=class extends y.Z{constructor(e){super(e),this.type="csv",this.refresh=(0,i.Ds)((async e=>{await this.load();const{extent:t,timeExtent:s}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),s&&(this.sourceJSON.timeInfo.timeExtent=[s.start,s.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const s=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return m.Z.fromJSON(s)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const s=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:s.count,extent:f.Z.fromJSON(s.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async queryAttributeBins(e,t={}){return await this.load(),this._connection.invoke("queryAttributeBins",e?e.toJSON():null,t)}async _startWorker(e){this._connection=await(0,h.bA)("CSVSourceWorker",{strategy:(0,p.Z)("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{url:t,delimiter:s,fields:r,latitudeField:o,longitudeField:i,spatialReference:n,timeInfo:a}=this.loadOptions,u=await this._connection.invoke("load",{url:t,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:r?.map((e=>e.toJSON())),latitudeField:o,longitudeField:i,spatialReference:n?.toJSON(),timeInfo:a?.toJSON()}},{signal:e});this.locationInfo=u.locationInfo,this.sourceJSON=u.layerDefinition,this.delimiter=u.delimiter}};(0,r._)([(0,a.Cb)()],g.prototype,"type",void 0),(0,r._)([(0,a.Cb)()],g.prototype,"loadOptions",void 0),(0,r._)([(0,a.Cb)()],g.prototype,"customParameters",void 0),(0,r._)([(0,a.Cb)()],g.prototype,"locationInfo",void 0),(0,r._)([(0,a.Cb)()],g.prototype,"sourceJSON",void 0),(0,r._)([(0,a.Cb)()],g.prototype,"delimiter",void 0),g=(0,r._)([(0,l.j)("esri.layers.graphics.sources.CSVSource")],g);var v=s(40400),C=s(14626),b=s(16641);function w(e,t){throw new o.Z(t,`CSVLayer (title: ${e.title}, id: ${e.id}) cannot be saved to a portal item`)}let F=class extends c.default{constructor(...e){super(...e),this.geometryType="point",this.capabilities=(0,v.MS)(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=d.Z.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},e).catch(i.r9).then((async()=>this.initLayerProperties(await this.createGraphicsSource(t))));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!t.layerDefinition?.drawingInfo?.labelingInfo}set url(e){if(!e)return void this._set("url",e);const t=(0,n.mN)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async createGraphicsSource(e){const t=new g({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.delimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(C.Z.from(e)||this.createQuery()))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}async queryObjectIds(e,t){return await this.load(),this.source.queryObjectIds(C.Z.from(e)||this.createQuery())}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(C.Z.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(C.Z.from(e)||this.createQuery())))}read(e,t){super.read(e,t),t&&"service"===t.origin&&this.revert(["latitudeField","longitudeField"],"service")}write(e,t){return super.write(e,{...t,writeLayerSchema:!0})}clone(){throw new o.Z("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(e){return w(this,"csv-layer:save")}async saveAs(e,t){return w(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};(0,r._)([(0,a.Cb)({readOnly:!0,json:{read:!1,write:!1}})],F.prototype,"capabilities",void 0),(0,r._)([(0,a.Cb)({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],F.prototype,"delimiter",void 0),(0,r._)([(0,a.Cb)({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],F.prototype,"editingEnabled",void 0),(0,r._)([(0,a.Cb)({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],F.prototype,"fields",void 0),(0,r._)([(0,a.Cb)({type:Boolean,readOnly:!0})],F.prototype,"isTable",null),(0,r._)([(0,u.r)("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],F.prototype,"readWebMapLabelsVisible",null),(0,r._)([(0,a.Cb)({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],F.prototype,"latitudeField",void 0),(0,r._)([(0,a.Cb)({type:["show","hide"]})],F.prototype,"listMode",void 0),(0,r._)([(0,a.Cb)({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],F.prototype,"locationType",void 0),(0,r._)([(0,a.Cb)({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],F.prototype,"longitudeField",void 0),(0,r._)([(0,a.Cb)({type:["CSV"]})],F.prototype,"operationalLayerType",void 0),(0,r._)([(0,a.Cb)()],F.prototype,"outFields",void 0),(0,r._)([(0,a.Cb)({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],F.prototype,"path",void 0),(0,r._)([(0,a.Cb)({json:{read:!1},cast:null,type:g,readOnly:!0})],F.prototype,"source",void 0),(0,r._)([(0,a.Cb)({json:{read:!1},value:"csv",readOnly:!0})],F.prototype,"type",void 0),(0,r._)([(0,a.Cb)({json:{read:b.r,write:{isRequired:!0,ignoreOrigin:!0,writer:b.w}}})],F.prototype,"url",null),F=(0,r._)([(0,l.j)("esri.layers.CSVLayer")],F);const _=F},10287:(e,t,s)=>{s.d(t,{e:()=>o,g:()=>r});const r={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!0,supportsCurrentUser:!1,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!0,supportsReturnMesh:!1,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!0,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},o={supportsDate:!0,supportsFixedInterval:!0,supportsAutoInterval:!0,supportsFixedBoundaries:!0,supportsStackBy:!0,supportsSplitBy:!0,supportsSnapToData:!1,supportsReturnFullIntervalBin:!1,supportsFirstDayOfWeek:!1,supportsNormalization:!0,supportedStatistics:{count:!0,sum:!0,avg:!0,var:!0,stddev:!0,min:!0,max:!0,percentileContinuous:!0,percentileDiscrete:!0,envelope:!0,centroid:!0,convexHull:!0},supportedNormalizationTypes:{field:!0,log:!0,naturalLog:!0,percentOfTotal:!0,squareRoot:!0}}},40400:(e,t,s)=>{s.d(t,{Dm:()=>l,Hq:()=>c,MS:()=>y,bU:()=>a});var r=s(39994),o=s(67134),i=s(10287),n=s(86094);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?n.I4:"esriGeometryPolyline"===e?n.ET:n.lF}}}const p=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let u=1;function l(e,t){if((0,r.Z)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let s=`this${d(t)} = null;`;for(const t in e)s+=`this${d(t)} = ${JSON.stringify(e[t])};`;const r=new Function(`\n      return class AttributesClass$${u++} {\n        constructor() {\n          ${s};\n        }\n      }\n    `)();return()=>new r}catch(s){return()=>({[t]:null,...e})}}function d(e){return p.test(e)?`.${e}`:`["${e}"]`}function c(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,o.d9)(e)}}]}function y(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryBins:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:i.g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryAttributeBins:i.e,editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}},91610:(e,t,s)=>{s.d(t,{Ax:()=>p,c_:()=>l,lD:()=>u});var r=s(36663),o=s(86745),i=s(81977),n=(s(39994),s(13802),s(4157),s(40266)),a=s(94451);function p(e,t,s){if(!e)return null;const r=e.find((e=>!!e.field));if(!r)return null;const o=new a.Z;return o.read(r,s),[o]}const u={type:[a.Z],json:{origins:{"web-scene":{write:!1,read:!1}},name:"layerDefinition.orderBy",read:{reader:p},write:{writer:function(e,t,s,r){const i=e.find((e=>!!e.field));i&&(0,o.RB)(s,[i.toJSON()],t)}}}},l=e=>{let t=class extends e{constructor(){super(...arguments),this.orderBy=null}};return(0,r._)([(0,i.Cb)(u)],t.prototype,"orderBy",void 0),t=(0,r._)([(0,n.j)("esri.layers.mixins.OrderedLayer")],t),t}},60822:(e,t,s)=>{s.d(t,{Z:()=>d});var r=s(36663),o=s(41151),i=s(25709),n=s(82064),a=s(81977),p=(s(39994),s(13802),s(4157),s(40266));const u=new i.X({esriFeatureEditToolAutoCompletePolygon:"auto-complete-polygon",esriFeatureEditToolCircle:"circle",esriFeatureEditToolEllipse:"ellipse",esriFeatureEditToolFreehand:"freehand",esriFeatureEditToolLine:"line",esriFeatureEditToolNone:"none",esriFeatureEditToolPoint:"point",esriFeatureEditToolPolygon:"polygon",esriFeatureEditToolRectangle:"rectangle",esriFeatureEditToolArrow:"arrow",esriFeatureEditToolTriangle:"triangle",esriFeatureEditToolLeftArrow:"left-arrow",esriFeatureEditToolRightArrow:"right-arrow",esriFeatureEditToolUpArrow:"up-arrow",esriFeatureEditToolDownArrow:"down-arrow"});let l=class extends(o.Z.ClonableMixin(n.Z)){constructor(e){super(e),this.name=null,this.description=null,this.drawingTool=null,this.prototype=null,this.thumbnail=null}};(0,r._)([(0,a.Cb)({json:{write:!0}})],l.prototype,"name",void 0),(0,r._)([(0,a.Cb)({json:{write:!0}})],l.prototype,"description",void 0),(0,r._)([(0,a.Cb)({json:{read:u.read,write:u.write}})],l.prototype,"drawingTool",void 0),(0,r._)([(0,a.Cb)({json:{write:!0}})],l.prototype,"prototype",void 0),(0,r._)([(0,a.Cb)({json:{write:!0}})],l.prototype,"thumbnail",void 0),l=(0,r._)([(0,p.j)("esri.layers.support.FeatureTemplate")],l);const d=l},18160:(e,t,s)=>{s.d(t,{Z:()=>y});var r=s(36663),o=s(41151),i=s(82064),n=s(81977),a=(s(39994),s(13802),s(4157),s(34248)),p=s(40266),u=s(39835),l=s(12795),d=s(60822);let c=class extends(o.Z.ClonableMixin(i.Z)){constructor(e){super(e),this.id=null,this.name=null,this.domains=null,this.templates=null}readDomains(e){const t={};for(const s of Object.keys(e))t[s]=(0,l.im)(e[s]);return t}writeDomains(e,t){const s={};for(const t of Object.keys(e))e[t]&&(s[t]=e[t]?.toJSON());t.domains=s}};(0,r._)([(0,n.Cb)({json:{write:!0}})],c.prototype,"id",void 0),(0,r._)([(0,n.Cb)({json:{write:!0}})],c.prototype,"name",void 0),(0,r._)([(0,n.Cb)({json:{write:!0}})],c.prototype,"domains",void 0),(0,r._)([(0,a.r)("domains")],c.prototype,"readDomains",null),(0,r._)([(0,u.c)("domains")],c.prototype,"writeDomains",null),(0,r._)([(0,n.Cb)({type:[d.Z],json:{write:!0}})],c.prototype,"templates",void 0),c=(0,r._)([(0,p.j)("esri.layers.support.FeatureType")],c);const y=c},94451:(e,t,s)=>{s.d(t,{Z:()=>d});var r,o=s(36663),i=s(25709),n=s(82064),a=s(81977),p=(s(39994),s(13802),s(4157),s(40266));const u=new i.X({asc:"ascending",desc:"descending"});let l=r=class extends n.Z{constructor(e){super(e),this.field=null,this.valueExpression=null,this.order="ascending"}clone(){return new r({field:this.field,valueExpression:this.valueExpression,order:this.order})}};(0,o._)([(0,a.Cb)({type:String,json:{write:!0}})],l.prototype,"field",void 0),(0,o._)([(0,a.Cb)({type:String,json:{write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"valueExpression",void 0),(0,o._)([(0,a.Cb)({type:u.apiValues,json:{type:u.jsonValues,read:u.read,write:u.write}})],l.prototype,"order",void 0),l=r=(0,o._)([(0,p.j)("esri.layers.support.OrderByInfo")],l);const d=l},21487:(e,t,s)=>{s.d(t,{Z:()=>c});var r=s(36663),o=s(41151),i=s(25709),n=s(82064),a=s(81977),p=(s(39994),s(13802),s(4157),s(40266));const u=new i.X({esriRelCardinalityOneToOne:"one-to-one",esriRelCardinalityOneToMany:"one-to-many",esriRelCardinalityManyToMany:"many-to-many"}),l=new i.X({esriRelRoleOrigin:"origin",esriRelRoleDestination:"destination"});let d=class extends(o.Z.ClonableMixin(n.Z)){constructor(e){super(e),this.cardinality=null,this.catalogId=null,this.composite=null,this.id=null,this.keyField=null,this.keyFieldInRelationshipTable=null,this.name=null,this.relatedTableId=null,this.relationshipTableId=null,this.role=null}};(0,r._)([(0,a.Cb)({json:{read:u.read,write:u.write}})],d.prototype,"cardinality",void 0),(0,r._)([(0,a.Cb)({json:{name:"catalogID"}})],d.prototype,"catalogId",void 0),(0,r._)([(0,a.Cb)({json:{read:!0,write:!0}})],d.prototype,"composite",void 0),(0,r._)([(0,a.Cb)({json:{read:!0,write:!0}})],d.prototype,"id",void 0),(0,r._)([(0,a.Cb)({json:{read:!0,write:!0}})],d.prototype,"keyField",void 0),(0,r._)([(0,a.Cb)({json:{read:!0,write:!0}})],d.prototype,"keyFieldInRelationshipTable",void 0),(0,r._)([(0,a.Cb)({json:{read:!0,write:!0}})],d.prototype,"name",void 0),(0,r._)([(0,a.Cb)({json:{read:!0,write:!0}})],d.prototype,"relatedTableId",void 0),(0,r._)([(0,a.Cb)({json:{read:!0,write:!0}})],d.prototype,"relationshipTableId",void 0),(0,r._)([(0,a.Cb)({json:{read:l.read,write:l.write}})],d.prototype,"role",void 0),d=(0,r._)([(0,p.j)("esri.layers.support.Relationship")],d);const c=d},98616:(e,t,s)=>{s.d(t,{Z:()=>c});var r=s(36663),o=s(74396),i=s(67979),n=s(41831),a=s(81977),p=(s(39994),s(13802),s(4157),s(40266)),u=s(14845),l=s(30879);let d=class extends o.Z{constructor(e){super(e),this._featureUtils=null,this.effectivePopupTemplate=null}get _arcadeTask(){return this.expressionsUsedInTitle.length>0?this._get("_arcadeTask")||(0,i.vr)((()=>(0,l.LC)())):null}get featureUtilsPromise(){return this._get("featureUtilsPromise")??s.e(58971).then(s.bind(s,58971)).then((e=>this._featureUtils=e))}get calculatedExpressions(){const e=new n.Z;if(!this.expressionsUsedInTitle.length)return e;if(!this._arcadeTask?.value){for(const t of this.expressionsUsedInTitle??[])e.push({name:t.name,invalid:!0});return e}for(const t of this.expressionsUsedInTitle)try{const s=this._arcadeTask.value.arcade.parseScript(t.expression,["$layer","$map","$datastore"]);if(s.isAsync){e.push({name:t.name,invalid:!0});break}e.push({name:t.name,syntax:s,invalid:!1,func:this._arcadeTask.value.arcade.compileScript(s,{vars:{$feature:"any"}})})}catch{e.push({name:t.name,invalid:!0});break}return e}get expressionsUsedInTitle(){let e=this.effectivePopupTemplate?.title??"";return"string"!=typeof e?[]:(e=e.toLowerCase(),this.effectivePopupTemplate?.expressionInfos?.filter((t=>e.includes(`{expression/${t.name.toLowerCase()}}`)))??[])}get fieldInfoMap(){return this._featureUtils?this._createFieldInfoMap(this._featureUtils.getAllFieldInfos(this.effectivePopupTemplate)):null}get hasBadExpressions(){return this.calculatedExpressions.some((e=>!0===e.invalid))}get requiredFields(){const e=new Set;if(this._arcadeTask?.value&&!this.hasBadExpressions)for(const t of this.calculatedExpressions?.toArray()??[])try{const s=this._arcadeTask.value.arcade.extractFieldLiterals(t.syntax);for(const t of s){const s=t.split("."),r=this.fieldsIndex.get(s.at(-1)??"");r&&e.add(r.name)}}catch{}const t=this._extractFieldNames(this.workingTitle);for(const s of t){const t=this.fieldsIndex.get(s);t&&e.add(t.name)}return e}get titleFromDisplayField(){let e="";return this.displayField&&(e=this.fieldsIndex.get(this.displayField)?.name??""),e||(e=this.fieldsIndex.get(this.objectIdField)?.name??""),e?`{${e}}`:""}get workingTitle(){const e=this.effectivePopupTemplate?this.effectivePopupTemplate.title:"";return""===e||null==e||this.hasBadExpressions||"string"!=typeof e?this.titleFromDisplayField:e}async getTitle(e,t,s){try{const{attributes:r}=t,o=s?.timeZone??"system",[{substituteFieldsInLinksAndAttributes:i}]=await Promise.all([this.featureUtilsPromise,this._arcadeTask?.promise]);if(s.fetchMissingFields&&(t=await this._checkAndReQueryGraphic(e,t)),this.workingTitle&&this.fieldInfoMap){const s=this._createFormattedAttributes(e,t,o).global;return i({attributes:r,expressionAttributes:null,fieldInfoMap:this.fieldInfoMap,globalAttributes:s,layer:e,text:this.workingTitle})}return""}catch{}return""}async _checkAndReQueryGraphic(e,t){const s=t.getObjectId();if(null==s)return t;if(!(0,u.R9)(this.requiredFields,t)){const t=e.createQuery();t.where="1=1",t.outFields=[...this.requiredFields],t.objectIds=[s];const r=await e.queryFeatures(t);if(1===r?.features.length)return r.features[0]}return t}_createFieldInfoMap(e){const t=new Map;if(!e)return t;for(const s of e){if(!s.fieldName)continue;const e=this.fieldsIndex.get(s.fieldName)?.name??s.fieldName;s.fieldName=e,t.set(e.toLowerCase(),s)}return t}_createFormattedAttributes(e,t,s="system"){const r=this.effectivePopupTemplate?.fieldInfos??[],o={};if(!this._featureUtils)return{};if(!this.hasBadExpressions&&this.calculatedExpressions.length>0&&this._arcadeTask?.value){const s=this._arcadeTask.value.Feature.createFromGraphicLikeObject(t.geometry,t.attributes,e,null);for(const e of this.calculatedExpressions)try{o[`expression/${e.name}`]=e.func({vars:{$feature:s}})}catch{}}const i={...t.attributes,...o};return{global:this._featureUtils.formatAttributes({fieldInfos:r,attributes:i,graphic:t,timeZone:s,layer:e,fieldInfoMap:this.fieldInfoMap}),content:[]}}_extractFieldNames(e){return(0,u.ld)(e).filter((e=>!(0===e.indexOf("relationships/")||0===e.indexOf("expression/"))))}};(0,r._)([(0,a.Cb)({readOnly:!0})],d.prototype,"_arcadeTask",null),(0,r._)([(0,a.Cb)()],d.prototype,"_featureUtils",void 0),(0,r._)([(0,a.Cb)({readOnly:!0})],d.prototype,"featureUtilsPromise",null),(0,r._)([(0,a.Cb)({readOnly:!0})],d.prototype,"calculatedExpressions",null),(0,r._)([(0,a.Cb)()],d.prototype,"displayField",void 0),(0,r._)([(0,a.Cb)()],d.prototype,"effectivePopupTemplate",void 0),(0,r._)([(0,a.Cb)()],d.prototype,"expressionsUsedInTitle",null),(0,r._)([(0,a.Cb)()],d.prototype,"fieldsIndex",void 0),(0,r._)([(0,a.Cb)()],d.prototype,"fieldInfoMap",null),(0,r._)([(0,a.Cb)()],d.prototype,"fields",void 0),(0,r._)([(0,a.Cb)()],d.prototype,"objectIdField",void 0),(0,r._)([(0,a.Cb)()],d.prototype,"requiredFields",null),d=(0,r._)([(0,p.j)("esri.layers.support.TitleCreator")],d);const c=d},86254:(e,t,s)=>{s.d(t,{h:()=>h,j:()=>S});var r=s(39994),o=s(20692),i=s(13449);function n(e,t,s){return!!p(e,t,s)}function a(e,t,s){return p(e,t,s)}function p(e,t,s){return e&&e.hasOwnProperty(t)?e[t]:s}const u={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",keywords:"supportsKeywords",exifInfo:"supportsExifInfo"};function l(e){const t=e?.supportedSpatialAggregationStatistics?.map((e=>e.toLowerCase()));return{envelope:!!t?.includes("envelopeaggregate"),centroid:!!t?.includes("centroidaggregate"),convexHull:!!t?.includes("convexhullaggregate")}}function d(e,t){const s=e?.supportedOperationsWithCacheHint?.map((e=>e.toLowerCase()));return!!s?.includes(t.toLowerCase())}function c(e){const t=e?.supportedStatisticTypes?.map((e=>e.toLowerCase()));return{count:!!t?.includes("count"),sum:!!t?.includes("sum"),min:!!t?.includes("min"),max:!!t?.includes("max"),avg:!!t?.includes("avg"),var:!!t?.includes("var"),stddev:!!t?.includes("stddev"),percentileContinuous:!!t?.includes("percentile_continuous"),percentileDiscrete:!!t?.includes("percentile_discrete"),envelope:!!t?.includes("envelopeaggregate"),centroid:!!t?.includes("centroidaggregate"),convexHull:!!t?.includes("convexhullaggregate")}}function y(e){const t=e?.supportedNormalizationTypes?.map((e=>e.toLowerCase()));return{field:!!t?.includes("field"),log:!!t?.includes("log"),naturalLog:!!t?.includes("naturallog"),percentOfTotal:!!t?.includes("percentoftotal"),squareRoot:!!t?.includes("squareroot")}}function h(e,t){return{analytics:f(e),attachment:m(e),data:g(e),metadata:v(e),operations:C(e.capabilities,e,t),query:b(e,t),queryAttributeBins:_(e),queryRelated:w(e),queryTopFeatures:F(e),editing:x(e)}}function f(e){return{supportsCacheHint:d(e.advancedQueryCapabilities,"queryAnalytics")}}function m(e){const t=e.attachmentProperties,s={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1,supportsCacheHint:d(e.advancedQueryCapabilities,"queryAttachments"),supportsOrderByFields:n(e.advancedQueryCapabilities,"supportsQueryAttachmentOrderByFields",!1),supportsResize:n(e,"supportsAttachmentsResizing",!1)};return t&&Array.isArray(t)&&t.forEach((e=>{const t=u[e.name];t&&(s[t]=!!e.isEnabled)})),s}function g(e){return{isVersioned:n(e,"isDataVersioned",!1),isBranchVersioned:n(e,"isDataBranchVersioned",!1),supportsAttachment:n(e,"hasAttachments",!1),supportsM:n(e,"hasM",!1),supportsZ:n(e,"hasZ",!1)}}function v(e){return{supportsAdvancedFieldProperties:n(e,"supportsFieldDescriptionProperty",!1)}}function C(e,t,s){const r=e?e.toLowerCase().split(",").map((e=>e.trim())):[],i=s?(0,o.Qc)(s):null,a=r.includes(null!=i&&"MapServer"===i.serverType?"data":"query"),p=r.includes("editing")&&!t.datesInUnknownTimezone;let u=p&&r.includes("create"),l=p&&r.includes("delete"),d=p&&r.includes("update");const c=r.includes("changetracking"),y=t.advancedQueryCapabilities;return p&&!(u||l||d)&&(u=l=d=!0),{supportsCalculate:n(t,"supportsCalculate",!1),supportsTruncate:n(t,"supportsTruncate",!1),supportsValidateSql:n(t,"supportsValidateSql",!1),supportsAdd:u,supportsDelete:l,supportsEditing:p,supportsChangeTracking:c,supportsQuery:a,supportsQueryAnalytics:n(y,"supportsQueryAnalytic",!1),supportsQueryAttachments:n(y,"supportsQueryAttachments",!1),supportsQueryBins:n(y,"supportsQueryBins",!1),supportsQueryTopFeatures:n(y,"supportsTopFeaturesQuery",!1),supportsResizeAttachments:n(t,"supportsAttachmentsResizing",!1),supportsSync:r.includes("sync"),supportsUpdate:d,supportsExceedsLimitStatistics:n(t,"supportsExceedsLimitStatistics",!1),supportsAsyncConvert3D:n(t,"supportsAsyncConvert3D",!1)}}function b(e,t){const s=e.advancedQueryCapabilities,p=e.ownershipBasedAccessControlForFeatures,u=e.archivingInfo,c=e.currentVersion,y=t?.includes("MapServer"),h=!y||c>=(0,r.Z)("mapserver-pbf-version-support"),f=(0,o.M8)(t),m=new Set((e.supportedQueryFormats??"").split(",").map((e=>e.toLowerCase().trim())));return{maxRecordCount:a(e,"maxRecordCount",void 0),maxRecordCountFactor:a(e,"maxRecordCountFactor",void 0),standardMaxRecordCount:a(e,"standardMaxRecordCount",void 0),supportedSpatialAggregationStatistics:l(s),supportsCacheHint:n(s,"supportsQueryWithCacheHint",!1)||d(s,"query"),supportsCentroid:n(s,"supportsReturningGeometryCentroid",!1),supportsCompactGeometry:f,supportsCurrentUser:n(s,"supportsCurrentUserQueries",!1),supportsDefaultSpatialReference:n(s,"supportsDefaultSR",!1),supportsDisjointSpatialRelationship:n(s,"supportsDisjointSpatialRel",!1),supportsDistance:n(s,"supportsQueryWithDistance",!1),supportsDistinct:n(s,"supportsDistinct",e.supportsAdvancedQueries),supportsExtent:n(s,"supportsReturningQueryExtent",!1),supportsFormatPBF:h&&m.has("pbf"),supportsFullTextSearch:n(s,"supportsFullTextSearch",!1),supportsGeometryProperties:n(s,"supportsReturningGeometryProperties",!1),supportsHavingClause:n(s,"supportsHavingClause",!1),supportsHistoricMoment:n(u,"supportsQueryWithHistoricMoment",!1),supportsMaxRecordCountFactor:n(s,"supportsMaxRecordCountFactor",!1),supportsOrderBy:n(s,"supportsOrderBy",e.supportsAdvancedQueries),supportsPagination:n(s,"supportsPagination",!1),supportsPercentileStatistics:n(s,"supportsPercentileStatistics",!1),supportsQuantization:n(e,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:n(e,"supportsQuantizationEditMode",!1),supportsQueryByAnonymous:n(p,"allowAnonymousToQuery",!0),supportsQueryByOthers:n(p,"allowOthersToQuery",!0),supportsQueryGeometry:n(e,"supportsReturningQueryGeometry",!1),supportsResultType:n(s,"supportsQueryWithResultType",!1),supportsReturnMesh:!!(0,i.Si)(e.infoFor3D),supportsSpatialAggregationStatistics:n(s,"supportsSpatialAggregationStatistics",!1),supportsSqlExpression:n(s,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:n(e,"useStandardizedQueries",!1),supportsStatistics:n(s,"supportsStatistics",e.supportsStatistics),supportsTopFeaturesQuery:n(s,"supportsTopFeaturesQuery",!1),supportsTrueCurve:n(s,"supportsTrueCurve",!1),tileMaxRecordCount:a(e,"tileMaxRecordCount",void 0)}}function w(e){const t=e.advancedQueryCapabilities,s=n(t,"supportsAdvancedQueryRelated",!1);return{supportsPagination:n(t,"supportsQueryRelatedPagination",!1),supportsCount:s,supportsOrderBy:s,supportsCacheHint:d(t,"queryRelated")}}function F(e){return{supportsCacheHint:d(e.advancedQueryCapabilities,"queryTopFilter")}}function _(e){const t=e?e.queryBinsCapabilities:void 0;return{supportsDate:n(t,"supportsDateBin",!1),supportsFixedInterval:n(t,"supportsFixedIntervalBin",!1),supportsAutoInterval:n(t,"supportsAutoIntervalBin",!1),supportsFixedBoundaries:n(t,"supportsFixedBoundariesBin",!1),supportsStackBy:n(t,"supportsStackBy",!1),supportsSplitBy:n(t,"supportsSplitBy",!1),supportsSnapToData:n(t,"supportsSnapToData",!1),supportsReturnFullIntervalBin:n(t,"supportsReturnFullIntervalBin",!1),supportsFirstDayOfWeek:n(t,"supportsFirstDayOfWeek",!1),supportsNormalization:n(t,"supportsNormalization",!1),supportedStatistics:c(t),supportedNormalizationTypes:y(t)}}function x(e){const t=e.ownershipBasedAccessControlForFeatures,s=e?e.advancedEditingCapabilities:void 0;return{supportsGeometryUpdate:n(e,"allowGeometryUpdates",!0),supportsGlobalId:n(e,"supportsApplyEditsWithGlobalIds",!1),supportsReturnServiceEditsInSourceSpatialReference:n(e,"supportsReturnServiceEditsInSourceSR",!1),supportsRollbackOnFailure:n(e,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:n(e,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:n(e,"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:n(t,"allowAnonymousToDelete",!0),supportsDeleteByOthers:n(t,"allowOthersToDelete",!0),supportsUpdateByAnonymous:n(t,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:n(t,"allowOthersToUpdate",!0),supportsAsyncApplyEdits:n(s,"supportsAsyncApplyEdits",!1),zDefault:a(e,"zDefault",void 0)}}function S(e){return{operations:{supportsAppend:n(e,"supportsAppend",!1),supportsCoverageQuery:e?.playbackInfo?.klv["0601"]??!1,supportsExportClip:n(e,"supportsExportClip",!1),supportsExportFrameset:n(e,"supportsExportFrameset",!1),supportsMensuration:n(e,"supportsMensuration",!1),supportsUpdate:n(e,"supportsUpdate",!1)}}}},13097:(e,t,s)=>{s.d(t,{p:()=>o});var r=s(95247);function o(e,t,s){if(!s?.features||!s.hasZ)return;const o=(0,r.k)(s.geometryType,t,e.outSpatialReference);if(null!=o)for(const e of s.features)o(e.geometry)}},51211:(e,t,s)=>{s.d(t,{Z:()=>C});var r,o=s(36663),i=s(80085),n=s(25709),a=s(82064),p=s(67134),u=s(81977),l=(s(39994),s(13802),s(34248)),d=s(40266),c=s(39835),y=s(14685),h=s(53736),f=s(59659),m=s(12512);const g=new n.X({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let v=r=class extends a.Z{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){return this.readFeaturesWithClass(e,t,i.Z)}writeGeometryType(e,t,s,r){if(e)return void g.write(e,t,s,r);const{features:o}=this;if(o)for(const e of o)if(null!=e?.geometry)return void g.write(e.geometry.type,t,s,r)}readQueryGeometry(e,t){if(!e)return null;const s=!!e.spatialReference,r=(0,h.im)(e);return r&&!s&&t.spatialReference&&(r.spatialReference=y.Z.fromJSON(t.spatialReference)),r}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:s}=this;if(s)for(const e of s)if(e&&null!=e.geometry&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new r(this.cloneProperties())}cloneProperties(){return(0,p.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let s=0;s<t.features.length;s++){const r=t.features[s];if(r.geometry){const t=e?.[s];r.geometry=t?.toJSON()||r.geometry}}return t}quantize(e){const{scale:[t,s],translate:[r,o]}=e,i=this.features,n=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-r)/t)),(e=>Math.round((o-e)/s)));for(let e=0,t=i.length;e<t;e++)n?.(i[e].geometry)||(i.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:s}=this;if(!s)return this;const{translate:[r,o],scale:[i,n]}=s;let a=null,p=null;if(this.hasZ&&null!=s?.scale?.[2]){const{translate:[,,e],scale:[,,t]}=s;a=s=>s*t+e}if(this.hasM&&null!=s?.scale?.[3]){const{translate:[,,,e],scale:[,,,t]}=s;p=s=>null==s?s:s*t+e}const u=this._getHydrationFunction(e,(e=>e*i+r),(e=>o-e*n),a,p);for(const{geometry:e}of t)null!=e&&u&&u(e);return this.transform=null,this}readFeaturesWithClass(e,t,s){const r=y.Z.fromJSON(t.spatialReference),o=[];for(let t=0;t<e.length;t++){const i=e[t],n=s.fromJSON(i),a=i.geometry?.spatialReference;null==n.geometry||a||(n.geometry.spatialReference=r);const p=i.aggregateGeometries,u=n.aggregateGeometries;if(p&&null!=u)for(const e in u){const t=u[e],s=p[e]?.spatialReference;null==t||s||(t.spatialReference=r)}o.push(n)}return o}_quantizePoints(e,t,s){let r,o;const i=[];for(let n=0,a=e.length;n<a;n++){const a=e[n];if(n>0){const e=t(a[0]),n=s(a[1]);e===r&&n===o||(i.push([e-r,n-o]),r=e,o=n)}else r=t(a[0]),o=s(a[1]),i.push([r,o])}return i.length>0?i:null}_getQuantizationFunction(e,t,s){return"point"===e?e=>(e.x=t(e.x),e.y=s(e.y),e):"polyline"===e||"polygon"===e?e=>{const r=(0,h.oU)(e)?e.rings:e.paths,o=[];for(let e=0,i=r.length;e<i;e++){const i=r[e],n=this._quantizePoints(i,t,s);n&&o.push(n)}return o.length>0?((0,h.oU)(e)?e.rings=o:e.paths=o,e):null}:"multipoint"===e?e=>{const r=this._quantizePoints(e.points,t,s);return r&&r.length>0?(e.points=r,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,s,r,o){return"point"===e?e=>{e.x=t(e.x),e.y=s(e.y),r&&(e.z=r(e.z))}:"polyline"===e||"polygon"===e?e=>{const i=(0,h.oU)(e)?e.rings:e.paths;let n,a;for(let e=0,r=i.length;e<r;e++){const r=i[e];for(let e=0,o=r.length;e<o;e++){const o=r[e];e>0?(n+=o[0],a+=o[1]):(n=o[0],a=o[1]),o[0]=t(n),o[1]=s(a)}}if(r&&o)for(let e=0,t=i.length;e<t;e++){const t=i[e];for(let e=0,s=t.length;e<s;e++){const s=t[e];s[2]=r(s[2]),s[3]=o(s[3])}}else if(r)for(let e=0,t=i.length;e<t;e++){const t=i[e];for(let e=0,s=t.length;e<s;e++){const s=t[e];s[2]=r(s[2])}}else if(o)for(let e=0,t=i.length;e<t;e++){const t=i[e];for(let e=0,s=t.length;e<s;e++){const s=t[e];s[2]=o(s[2])}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=s(e.ymin),e.xmax=t(e.xmax),e.ymax=s(e.ymax),r&&null!=e.zmax&&null!=e.zmin&&(e.zmax=r(e.zmax),e.zmin=r(e.zmin)),o&&null!=e.mmax&&null!=e.mmin&&(e.mmax=o(e.mmax),e.mmin=o(e.mmin))}:"multipoint"===e?e=>{const i=e.points;let n,a;for(let e=0,r=i.length;e<r;e++){const r=i[e];e>0?(n+=r[0],a+=r[1]):(n=r[0],a=r[1]),r[0]=t(n),r[1]=s(a)}if(r&&o)for(let e=0,t=i.length;e<t;e++){const t=i[e];t[2]=r(t[2]),t[3]=o(t[3])}else if(r)for(let e=0,t=i.length;e<t;e++){const t=i[e];t[2]=r(t[2])}else if(o)for(let e=0,t=i.length;e<t;e++){const t=i[e];t[2]=o(t[2])}}:null}};(0,o._)([(0,u.Cb)({type:String,json:{write:!0}})],v.prototype,"displayFieldName",void 0),(0,o._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"exceededTransferLimit",void 0),(0,o._)([(0,u.Cb)({type:[i.Z],json:{write:!0}})],v.prototype,"features",void 0),(0,o._)([(0,l.r)("features")],v.prototype,"readFeatures",null),(0,o._)([(0,u.Cb)({type:[m.Z],json:{write:!0}})],v.prototype,"fields",void 0),(0,o._)([(0,u.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:g.read}}})],v.prototype,"geometryType",void 0),(0,o._)([(0,c.c)("geometryType")],v.prototype,"writeGeometryType",null),(0,o._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasM",void 0),(0,o._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasZ",void 0),(0,o._)([(0,u.Cb)({types:f.qM,json:{write:!0}})],v.prototype,"queryGeometry",void 0),(0,o._)([(0,l.r)("queryGeometry")],v.prototype,"readQueryGeometry",null),(0,o._)([(0,u.Cb)({type:y.Z,json:{write:!0}})],v.prototype,"spatialReference",void 0),(0,o._)([(0,c.c)("spatialReference")],v.prototype,"writeSpatialReference",null),(0,o._)([(0,u.Cb)({json:{write:!0}})],v.prototype,"transform",void 0),v=r=(0,o._)([(0,d.j)("esri.rest.support.FeatureSet")],v),v.prototype.toJSON.isDefaultToJSON=!0;const C=v},48498:(e,t,s)=>{var r;s.d(t,{x:()=>r}),function(e){e[e.SAVE=0]="SAVE",e[e.SAVE_AS=1]="SAVE_AS"}(r||(r={}))}}]);