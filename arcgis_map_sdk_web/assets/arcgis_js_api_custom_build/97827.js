"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[97827],{97827:(e,t,n)=>{n.r(t),n.d(t,{invokeGeometryOp:()=>o});var i=n(53736);function a(e,t){let n;return{loaded:!1,load:()=>n??=t().then((t=>{c[e]={loaded:!0,execute:t}}))}}function r(e){return null==e?null:e.toJSON()}const c={disjoint:a("disjoint",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(23299)]).then(n.bind(n,35180)).then((e=>e.execute)))),intersects:a("intersects",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(65573)]).then(n.bind(n,48526)).then((e=>e.execute)))),touches:a("touches",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(6220)]).then(n.bind(n,27908)).then((e=>e.execute)))),crosses:a("crosses",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(76354)]).then(n.bind(n,6359)).then((e=>e.execute)))),within:a("within",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(44736)]).then(n.bind(n,26108)).then((e=>e.execute)))),contains:a("contains",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(15667)]).then(n.bind(n,98944)).then((e=>e.execute)))),overlaps:a("overlaps",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(98658)]).then(n.bind(n,38848)).then((e=>e.execute)))),equals:a("equals",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(64987)]).then(n.bind(n,45141));return(t,n)=>e.execute((0,i.im)(t),(0,i.im)(n))})),relate:a("relate",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(44717)]).then(n.bind(n,88415));return(t,n,a)=>e.execute((0,i.im)(t),(0,i.im)(n),a)})),intersection:a("intersection",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(60823)]).then(n.bind(n,60823)).then((e=>e.execute)))),union:a("union",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(4004)]).then(n.bind(n,4004)).then((e=>e.executeMany)))),difference:a("difference",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(27287)]).then(n.bind(n,27287));return(t,n)=>r(e.execute((0,i.im)(t),(0,i.im)(n)))})),symmetricDifference:a("symmetricDifference",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(98791)]).then(n.bind(n,98791));return(t,n)=>r(e.execute((0,i.im)(t),(0,i.im)(n)))})),clip:a("clip",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(20296)]).then(n.bind(n,28160));return(t,n)=>r(e.execute((0,i.im)(t),(0,i.im)(n)))})),cut:a("cut",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(33587)]).then(n.bind(n,33587));return(t,n)=>e.execute((0,i.im)(t),(0,i.im)(n)).map((e=>r(e)))})),area:a("area",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(74417)]).then(n.bind(n,54503)),{convertFromSpatialReferenceUnit:t,toAreaUnit:a}=await n.e(30020).then(n.bind(n,30020));return(n,r)=>{const c=e.execute((0,i.im)(n));return t(n.spatialReference,a(r),c)}})),geodeticArea:a("geodeticArea",(async()=>{const e=await n.e(97733).then(n.bind(n,97733)),{convert:t,squareMeters:a,toAreaUnit:r}=await n.e(30020).then(n.bind(n,30020));return await e.load(),(n,c)=>{const o=e.execute((0,i.im)(n));return t(a,r(c),o)}})),length:a("length",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(36497)]).then(n.bind(n,4740)),{convertFromSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(30020).then(n.bind(n,30020));return(n,a)=>{const r=e.execute(n);return t(n.spatialReference,i(a),r)}})),geodeticLength:a("geodeticLength",(async()=>{const e=await n.e(77199).then(n.bind(n,77199)),{convert:t,meters:a,toLengthUnit:r}=await n.e(30020).then(n.bind(n,30020));return await e.load(),(n,c)=>{const o=e.execute((0,i.im)(n));return t(a,r(c),o)}})),distance:a("distance",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(29522)]).then(n.bind(n,86448)),{convertFromSpatialReferenceUnit:t,toLengthUnit:a}=await n.e(30020).then(n.bind(n,30020));return(n,r,c)=>{const o=e.execute((0,i.im)(n),(0,i.im)(r));return t(n.spatialReference,a(c),o)}})),densify:a("densify",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(3376)]).then(n.bind(n,3376)),{convertToSpatialReferenceUnit:t,toLengthUnit:a}=await n.e(30020).then(n.bind(n,30020));return(n,c,o)=>(c=t(a(o),n.spatialReference,c),r(e.execute((0,i.im)(n),c)))})),geodeticDensify:a("geodeticDensify",(async()=>{const e=await n.e(62888).then(n.bind(n,62888)),{convert:t,meters:a,toLengthUnit:c}=await n.e(30020).then(n.bind(n,30020));return await e.load(),(n,o,s)=>(o=t(c(s),a,o),r(e.execute((0,i.im)(n),o)))})),generalize:a("generalize",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(36548)]).then(n.bind(n,36548)),{convertToSpatialReferenceUnit:t,toLengthUnit:a}=await n.e(30020).then(n.bind(n,30020));return(n,c,o,s)=>(c=t(a(o),n.spatialReference,c),r(e.execute((0,i.im)(n),c,s)))})),buffer:a("buffer",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(11008),n.e(42749)]).then(n.bind(n,42749)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(30020).then(n.bind(n,30020));return(n,a,r)=>(a=t(i(r),n.spatialReference,a),e.execute(n,a))})),geodesicBuffer:a("geodesicBuffer",(async()=>{const e=await n.e(27004).then(n.bind(n,27004)),{convert:t,meters:i,toLengthUnit:a}=await n.e(30020).then(n.bind(n,30020));return await e.load(),(n,r,c)=>(r=t(a(c),i,r),e.execute(n,r))})),offset:a("offset",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(55835)]).then(n.bind(n,55835)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(30020).then(n.bind(n,30020));return(n,a,r,c)=>(a=t(i(r),n.spatialReference,a),e.execute(n,a,c))})),rotate:a("rotate",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(50813)]).then(n.bind(n,50813)),{default:t}=await Promise.all([n.e(9008),n.e(75336)]).then(n.bind(n,75336));return(n,a,c,o)=>{const s=(new t).rotate(a,c,o);return r(e.execute((0,i.im)(n),s))}})),centroid:a("centroid",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(49987)]).then(n.bind(n,64790));return t=>r(e.execute((0,i.im)(t)))})),labelPoint:a("labelPoint",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(10390),n.e(35240)]).then(n.bind(n,20331));return t=>r(e.execute((0,i.im)(t)))})),simplify:a("simplify",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(81317)]).then(n.bind(n,81317)).then((e=>e.execute)))),isSimple:a("isSimple",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(81317)]).then(n.bind(n,81317)).then((e=>e.isSimple)))),convexHull:a("convexHull",(()=>Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(89263)]).then(n.bind(n,89263)).then((e=>e.execute)))),getNearestCoordinate:a("getNearestCoordinate",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(66503)]).then(n.bind(n,21484));return(t,n,a)=>{const c=e.getNearestCoordinate((0,i.im)(t),(0,i.im)(n),a);return{...c,coordinate:r(c.coordinate)}}})),getNearestVertex:a("getNearestVertex",(async()=>{const e=await Promise.all([n.e(9008),n.e(26166),n.e(37096),n.e(66503)]).then(n.bind(n,21484));return(t,n)=>{const a=e.getNearestVertex((0,i.im)(t),(0,i.im)(n));return{...a,coordinate:r(a.coordinate)}}}))};function o(e,t){const n=c[e];return n.loaded?n.execute.apply(void 0,t):n.load().then((()=>o(e,t)))}}}]);