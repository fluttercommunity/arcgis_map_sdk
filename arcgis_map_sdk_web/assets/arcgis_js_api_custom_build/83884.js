"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[83884],{92670:(e,t,o)=>{o.d(t,{c:()=>i});var r=o(94827);function i(e,t,o){if(!(0,r.i)())return;const i=function(e){class t extends window.MutationObserver{constructor(e){super(e),this.observedEntry=[],this.callback=e}observe(e,t){return this.observedEntry.push({target:e,options:t}),super.observe(e,t)}unobserve(e){const t=this.observedEntry.filter((t=>t.target!==e));this.observedEntry=[],this.callback(super.takeRecords(),this),this.disconnect(),t.forEach((e=>this.observe(e.target,e.options)))}}return"intersection"===e?window.IntersectionObserver:"mutation"===e?t:window.ResizeObserver}(e);return new i(t,o)}},58483:(e,t,o)=>{o.d(t,{C:()=>r});const r={container:"container",containerNone:"container--none-selection",icon:"dropdown-item-icon",iconEnd:"dropdown-item-icon--end",iconStart:"dropdown-item-icon--start",itemContent:"dropdown-item-content",link:"dropdown-link"}},83884:(e,t,o)=>{o.r(t),o.d(t,{DropdownGroup:()=>h});var r=o(94827),i=o(21293),s=o(62910),n=o(92670),d=o(58483),c=o(98701);const a="dropdown-title",l="dropdown-separator",p=c.iv`:host{display:block}.container{text-align:start}.dropdown-title{margin-block-end:-1px;display:block;cursor:default;overflow-wrap:break-word;border-width:0px;border-block-end-width:1px;border-style:solid;font-weight:var(--calcite-font-weight-bold);border-color:var(--calcite-dropdown-group-border-color, var(--calcite-color-border-3));color:var(--calcite-dropdown-group-title-text-color, var(--calcite-color-text-2))}.dropdown-separator{display:block;block-size:1px;background-color:var(--calcite-dropdown-group-border-color, var(--calcite-color-border-3))}:host([scale=s]){font-size:var(--calcite-font-size--2);line-height:1rem}:host([scale=s]) .dropdown-title{padding:.5rem}:host([scale=m]){font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=m]) .dropdown-title{padding:.75rem}:host([scale=l]){font-size:var(--calcite-font-size-0);line-height:1.25rem}:host([scale=l]) .dropdown-title{padding:1rem}:host([hidden]){display:none}[hidden]{display:none}`;class h extends s.oi{constructor(){super(),this.mutationObserver=(0,n.c)("mutation",(()=>this.updateItems())),this.position=-1,this.scale="m",this.selectionMode="single",this.calciteInternalDropdownItemChange=(0,s.yM)({cancelable:!1}),this.listen("calciteInternalDropdownItemSelect",this.updateActiveItemOnChange)}static{this.properties={groupTitle:3,position:9,scale:3,selectionMode:3}}static{this.shadowRootOptions={mode:"open",delegatesFocus:!0}}static{this.styles=p}connectedCallback(){super.connectedCallback(),this.updateItems(),this.mutationObserver?.observe(this.el,{childList:!0})}willUpdate(e){e.has("selectionMode")&&(this.hasUpdated||"single"!==this.selectionMode)&&this.updateItems()}disconnectedCallback(){super.disconnectedCallback(),this.mutationObserver?.disconnect()}updateActiveItemOnChange(e){this.requestedDropdownGroup=e.detail.requestedDropdownGroup,this.requestedDropdownItem=e.detail.requestedDropdownItem,this.calciteInternalDropdownItemChange.emit({requestedDropdownGroup:this.requestedDropdownGroup,requestedDropdownItem:this.requestedDropdownItem})}updateItems(){Array.from(this.el.querySelectorAll("calcite-dropdown-item")).forEach((e=>e.selectionMode=this.selectionMode))}render(){const e=this.groupTitle?i.dy`<span aria-hidden=true class=${(0,s.Vp)(a)}>${this.groupTitle}</span>`:null,t=this.position>0?i.dy`<div class=${(0,s.Vp)(l)} role=separator></div>`:null;return this.el.ariaLabel=this.groupTitle,this.el.role="group",i.dy`<div class=${(0,s.Vp)({[d.C.container]:!0})}>${t}${e}<slot></slot></div>`}}(0,r.c)("calcite-dropdown-group",h)}}]);