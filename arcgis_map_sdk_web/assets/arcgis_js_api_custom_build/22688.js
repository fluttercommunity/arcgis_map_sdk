"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[22688],{22688:(e,t,a)=>{a.r(t),a.d(t,{createArcadeExecutor:()=>F,createArcadeProfile:()=>I});var r=a(80085),n=a(78053),o=a(58830),c=(a(39994),a(59801)),i=a(70375),s=a(67134),p=a(13802),u=a(19980),l=a(62717),m=a(12926),y=a(93968),f=a(51211),d=a(30879);let b=null;function v(e,t,a,r={}){const n=t.elementType,c="value",i="array"===n.type?[{name:c,type:n.type,elementType:n.elementType}]:"dictionary"===n.type?[{name:c,type:n.type,properties:n.properties}]:[{name:c,type:n.type}];return new o.Z(e.map((e=>{const t={};return S(t,i,{[c]:e},a,r),t[c]})))}function g(e,t,a={}){const r=e instanceof f.Z?new m.default({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return t.constructFeatureSet(r,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function w(e,t,a={}){const{spatialReference:r,interceptor:n,lruCache:o}=a;return"string"==typeof e?t.createFeatureSetCollectionFromService(e,r,o,n):t.createFeatureSetCollectionFromMap(e,r,o,n)}function h(e,t,a,r={}){const n={};return S(n,t.properties,e,a,r),new b.Dictionary(n)}function S(e,t,a,r,o={}){const c={};for(const e of Object.keys(a))c[e.toLowerCase()]=a[e];for(const a of t){const t=a.name.toLowerCase();if(o.variablesPreProcessed)e[t]=c[t];else switch(a.type){case"array":{const n=c[t];e[t]=null==n?null:v(n,a,r,o);break}case"feature":{const a=c[t];e[t]=null==a?null:b.Feature.createFromGraphic(a,o?.timeZone);break}case"featureSet":{const a=c[t];e[t]=null==a?null:r?g(a,r,o):null;break}case"featureSetCollection":{const a=c[t];e[t]=null==a?null:r?w(a,r,o):null;break}case"dictionary":{const n=c[t];e[t]=null==n?null:h(n,a,r,o);break}case"date":{const a=c[t];e[t]=a?a instanceof n.iG?a:o?.timeZone?n.iG.dateJSAndZoneToArcadeDate(a,o?.timeZone):n.iG.dateJSToArcadeDate(a):null;break}case"dateOnly":{const a=c[t];e[t]=a?a instanceof u.u?a:u.u.fromReader(a):null;break}case"time":{const a=c[t];e[t]=a?a instanceof l.n?a:l.n.fromReader(a):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[t]=c[t];break;case"voxel":{const a=c[t];e[t]=null==a?null:new b.Voxel(a,o?.timeZone);break}}}}function $(e,t){for(const a of e)t.push(a),"dictionary"===a.type&&$(a.properties,t);return t}function C(e,t,a,r,n){const{spatialReference:o,interceptor:c,lruCache:i,console:s,abortSignal:p,timeZone:u,services:l={portal:y.Z.getDefault()}}=a,m={vars:{},spatialReference:o,interceptor:c,timeZone:u,lrucache:i,useAsync:n,services:l,console:s,abortSignal:p};return t?(S(m.vars,e.variables,t,r,a),m):m}function k(e,t){switch(t.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const t=(e.type,e),a="geometry"in t?t.geometry():null,n="readAttributes"in t?t.readAttributes():t.attributes;return new r.Z({geometry:a,attributes:n})}case"dictionary":{const a=e,r=a.attributes,n={};for(const e of Object.keys(r))n[e]=k(a.field(e),t);return n}case"array":return("toArray"in e?e.toArray():e).map((e=>k(e,t)))}return e}const x={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},A={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},Z={variables:[{name:"$voxel",type:"voxel"}]},T=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",x],["popup-element",x],["popup-feature-reduction",A],["popup-element-feature-reduction",A],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",Z],["popup-element-voxel",Z]]);function I(e){"feature-reduction-popup"===e?((0,c.x9)(p.Z.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):"feature-reduction-popup-element"===e&&((0,c.x9)(p.Z.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const t=T.get(e);if(!t){const t=Array.from(T.keys()).map((e=>`'${e}'`)).join(", ");throw new i.Z("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${t}`)}return(0,s.d9)(t)}async function F(e,t,a={}){b||(b=await(0,d.LC)());const{arcade:r,arcadeUtils:n}=b,{loadScriptDependencies:o,referencesMember:c,scriptIsAsync:s}=r,p=$(t.variables,[]),u=p.filter((e=>"featureSet"===e.type||"featureSetCollection"===e.type)).map((e=>e.name.toLowerCase())),l=r.parseScript(e,u);if(!l)throw new i.Z("arcade:invalid-script","Unable to create SyntaxTree");const m=n.extractFieldNames(l),y=r.scriptTouchesGeometry(l),f=p.map((e=>e.name.toLowerCase())).filter((e=>c(l,e))),v=s(l,u);await o(l,v,u);const g={vars:{},spatialReference:null,useAsync:v};for(const e of f)g.vars[e]="any";const{lruCache:w}=a,h=r.compileScript(l,g),S=r.featureSetUtils(),{services:x}=a;return{execute:(e,a={})=>{if(v)throw new i.Z("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const r=h(C(t,e,{lruCache:w,...a},S,v));return a.rawOutput?r:k(r,n)},executeAsync:async(e,a={})=>{const r=await h(C(t,e,{lruCache:w,services:x,...a},S,v));return a.rawOutput?r:k(r,n)},isAsync:v,variablesUsed:f,fieldsUsed:m,geometryUsed:y,syntaxTree:l}}},58830:(e,t,a)=>{a.d(t,{Z:()=>r});class r{constructor(e=[]){this._elements=e}length(){return this._elements.length}get(e){return this._elements[e]}toArray(){return this.slice()}slice(e=0,t=this.length()){const a=[];for(let r=e;r<t;r++)a.push(this.get(r));return a}}}}]);