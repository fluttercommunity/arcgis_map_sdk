"use strict";(self.webpackChunkarcgis_webpack01=self.webpackChunkarcgis_webpack01||[]).push([[82121],{82121:(e,t,r)=>{r.r(t),r.d(t,{default:()=>ie});var i=r(36663),s=r(7753),o=(r(39994),r(13802)),a=r(61681),n=r(99235),d=r(76868),l=r(7958),h=r(81977),u=r(40266),c=r(86717),p=r(81095),g=r(22349),_=r(49757),y=r(27127),f=r(92570),b=r(95247),m=r(20375),v=r(48358),x=r(98196),I=r(45043),E=r(38247),C=r(15553),w=r(14626),N=r(64573),O=r(12916);class D extends O.q{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:e=>[e.geometryBuffer]},e,{hasInitialize:!0})}}var S=r(28800),F=r(5556),G=r(56144),A=r(60480),P=r(57533),M=r(31355),R=r(86114);class j extends M.Z{constructor(e,t){super(),this._updateAndCompare=e,this._notifyUpdated=t,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const e=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:e})}this._nodes.clear()}get length(){return this._graphics.size}get(e){return this._graphics.get(e)}getNode(e){return this._nodes.get(e)}hasNode(e){return this._nodes.has(e)}nodes(){return this._nodes.values()}addNode(e,t){this._nodes.set(e,t);const r=t.graphics;if(0===r.length)return;const i=new Set;for(let t=0;t<r.length;t++){const s=r[t],o=s.objectId,a=this._graphics.get(o);if(a){i.add(o),s!==a&&(r[t]=a);const n=this._duplicates.get(o);n?n.push(e):this._duplicates.set(o,[a.nodeIndex,e])}else s.nodeIndex=e,this._graphics.set(o,s)}i.size&&this._updateForeignGraphics(t);const s=i.size>0?r.filter((e=>!i.has(e.objectId))):r;s.length>0&&this.emit("change",{added:s,removed:[]})}removeNode(e){const t=this._nodes.get(e);if(!t)return;this._nodes.delete(e);const r=new Set,i=[];for(const s of t.graphics){const t=s.objectId,o=this._graphics.get(t);if(!o)continue;const a=this._duplicates.get(t);if(a){const i=a.indexOf(e);if(-1===i)continue;if(a.splice(i,1),o.nodeIndex===e){let e=this.getNode(a[0]);for(let t=1;t<a.length;t++){const r=this.getNode(a[t]);(null==e||null!=r&&r.node.level>e.node.level)&&(e=r)}null!=e&&r.add(e)}1===a.length&&this._duplicates.delete(t)}else this._graphics.delete(t),i.push(s)}i.length>0&&this.emit("change",{added:[],removed:i}),r.forEach((e=>this._updateForeignGraphics(e)))}_updateForeignGraphics(e){const t=[],r=e.node.index,i=e.node.level;let s=0;for(;s<e.graphics.length;){const o=e.graphics[s].nodeIndex;if(o===r){s++;continue}let a=1;for(;s+a<e.graphics.length&&e.graphics[s+a].nodeIndex===o;)a++;const n=this.getNode(o);if(null!=n&&n.node.level>i)s+=a;else{for(let i=s;i<s+a;i++){const s=e.graphics[i];s.nodeIndex=r,this._updateAndCompare(s,e,i)&&t.push(s)}s+=a}}t.length>0&&this._notifyUpdated(t)}toArray(){return Array.from(this._graphics.values())}find(e){return(0,R.fQ)(this._graphics,e)}some(e){return(0,R.oE)(this._graphics,e)}forEach(e){this._graphics.forEach((t=>e(t)))}forEachNode(e){this._nodes.forEach(((t,r)=>e(t,r)))}get nodeCount(){return this._nodes.size}_checkInvariants(){const e=new Map;this._nodes.forEach(((t,r)=>{t.graphics.forEach((t=>{e.set(t.objectId,1+(e.get(t.objectId)??0)),this._duplicates.get(t.objectId)}))})),e.forEach(((e,t)=>{const r=this._graphics.get(t);if(!r)return;if(!this._nodes.get(r.nodeIndex))return;const i=this._duplicates.get(t);i&&i.forEach((e=>{this._nodes.get(e)}))}))}}var L=r(4574),q=r(78565),Q=r(7933),V=r(3917),H=r(70633),T=r(44613),U=r(37495),k=r(35990),Z=r(3289),z=r(47850),B=r(57686),W=r(85799),K=r(53448),J=r(21808),$=r(59439),X=r(67235),Y=r(22167);const ee=(0,V.v)();class te{constructor(e,t,r,i){this.graphics=e,this.featureIds=t,this.attributeInfo=r,this.node=i}get cachedMemory(){return this.graphics.reduce(((e,t)=>(0,v.Xw)(t)+e),(0,n.G7)(this.featureIds)+1024)}}let re=class extends((0,k.q)((0,Q.l)((0,T.i)((0,S.A)(J.Z))))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new j(((e,t,r)=>function(e,t,r){const i=t.attributeInfo;if(null==i?.loadedAttributes||null==i.attributeData)return!1;let s=!1;for(const{name:t}of i.loadedAttributes)if(i.attributeData[t]){const o=(0,q.Jx)(i.attributeData[t],r);o!==e.attributes[t]&&(e.attributes[t]=o,s=!0)}return s}(e,t,r)),(e=>this.processor.graphicsCore.recreateGraphics(e))),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then((()=>{(0,q.tq)(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const t=this.view.resourceController?.memoryController;this._i3sOverrides=new L.v({view:this.view,layer:e,memoryController:t}),(0,a.SC)(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()})):null}initialize(){this.addResolvingPromise(this.layer.indexInfo);const e=this.view.resourceController?.memoryController;this._i3sOverrides=new L.v({view:this.view,layer:this.layer,memoryController:e}),(0,q.OJ)(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new U.K({layerView:this}),this._updatingHandles.add((()=>this.layer.rangeInfos),(e=>this._rangeInfosChanged(e)),d.initial),this._updatingHandles.add((()=>this.layer.renderer),((e,t)=>this._rendererChange(e,t))),this._updatingHandles.add((()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted]),(()=>this._filterChange())),this.addHandles((0,d.watch)((()=>Z.h.I3S_TREE_SHOW_TILES),(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;r.e(29895).then(r.bind(r,29895)).then((({I3STreeDebugger:t})=>{!this._treeDebugger&&Z.h.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||!this._treeDebugger||Z.h.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}),d.initial)),this._set("processor",new F.I({owner:this,preferredUpdatePolicy:K.j.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",(({extent:e,spatialReference:t})=>this._controller.updateElevationChanged(e,t))),this.supportsHeightUnitConversion&&(this._verticalScale=(0,b.k)("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.when()),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new E.Z({layerView:this}),(0,q.X5)(this.layer.geometryDefinitions)&&(this._worker=new D((e=>this.view.resourceController.immediate.schedule(e)))),this.addHandles(this.layer.on("apply-edits",(e=>this._updatingHandles.addPromise(e.result)))),this.addHandles(this.layer.on("edits",(e=>{const t=this._pendingEditsQueue.then((()=>this._handleEdits(e))).then();this._pendingEditsQueue=t,this._updatingHandles.addPromise(t)}))),this.when((()=>{this._setupQueryEngine(),this._updatingHandles.add((()=>this.maximumNumberOfFeatures),(e=>this._controller.featureTarget=e),d.initial),this._updatingHandles.add((()=>this.suspended),(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=(0,a.SC)(this._treeDebugger),this._i3sOverrides=(0,a.SC)(this._i3sOverrides),this._set("processor",(0,a.SC)(this.processor)),this._controller=(0,a.SC)(this._controller),this._queryEngine=(0,a.SC)(this._queryEngine),this._worker=(0,a.SC)(this._worker),this._memCache=(0,a.SC)(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=(0,a.SC)(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??1}get requiredFields(){return this._fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){const e=this.processor?.graphicsCore?.displayFeatureLimit;return e?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort(((e,t)=>e-t)):null}get lodFactor(){return"Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){return!this.suspended&&!!this._controller?.rootNodeVisible}get legendEnabled(){return this.contentVisible&&!0===this.i3slayer?.legendEnabled}async whenGraphicAttributes(e,t){return(0,q.bf)(this.layer,e,this._getObjectIdField(),t,(()=>[...this.loadedGraphics.nodes()]))}getHit(e){if(!this.loadedGraphics)return null;const t=(0,I.mW)(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t?.attributes?.[r]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){return!!(this._controller?.updating||this.processor?.updating||this._fieldsHelper?.updating||this.layerFilterUpdating)}highlight(e,t){return this.processor.highlight(e,this.layer.objectIdField,t?.name??X.b)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return(0,P.sw)(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};null==this._worker&&(this._worker=new D((e=>this.view.resourceController.immediate.schedule(e))));const i=await this._worker.invoke(r,t);if(null==i)throw new Error("Failed to decompress Draco point data");return{positionData:i.positions,featureIds:i.featureIds}}async addNode(e,t,r){if(!se(t)&&!function(e){return"pointData"in e}(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void o.Z.getLogger(this).error("I3S node "+e.id+" already added");const i=null!=this.layer.fullExtent?function(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,null!=e.zmin&&null!=e.zmax&&(e.zmin-=t,e.zmax+=t),null!=e.mmin&&null!=e.mmax&&(e.mmin-=t,e.mmax+=t),e}(this.layer.fullExtent.clone(),.5):null,{featureIds:s,pointPositions:a}=se(t)?await this._extractBinaryPointPositions(e,t,r):this._extractLegacyPointPositions(t),n=new Array;this._validatePositions(e,s,a,i,n);const d=this._controller.crsVertex,l=this.view.spatialReference;(0,g.projectBuffer)(a,d,0,a,l,0,s.length);const h=se(t)?e.level:0,u=this._createGraphics(s,a,e.index,h),c=new te(u,s,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(c.featureIds,t.attributeDataInfo,r),e.numFeatures=c.graphics.length,this._updateNodeMemory(e),oe(c),n.length>0&&(this._computeObb(e,n,d),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(c);if(null!=this._verticalScale)for(const e of c.graphics)this._verticalScale(e.geometry);const p=this.view._stage.renderView.olidRenderHelper;if(p){const e=(0,N.ql)(this.view.map,this.layer.uid);for(let t=0;t<c.featureIds.length;t++){const r=c.featureIds[t];p.setUidToObjectAndLayerId(r,c.graphics[t].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!e&&(0,$.zc)(this.layer,this.view.popup?.defaultPopupTemplateEnabled),c.node.resources.attributes,t)}}this.loadedGraphics.addNode(e.index,c),this._controller.updateLoadStatus(e.index,!0),this._filterNode(c),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;(0,g.projectBuffer)(t,r,0,t,s,0),e.serviceObbInIndexSR=(0,z.Qb)(new W.U(t,3)),i.isGeographic&&((0,_.S)(e.serviceObbInIndexSR.center,s,ne,i),e.serviceObbInIndexSR.center=ne)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,r){const i=await this._decompressBinaryPointData(t,r),s=i.positionData,o=s.length/3,a=(0,f.bg)(3*o),n=null!=e.serviceObbInIndexSR?e.serviceObbInIndexSR.center:p.AG,d=Math.abs(n[2])*2**-20;for(let e=0;e<o;e++){const t=3*e;a[t]=s[t]+n[0],a[t+1]=s[t+1]+n[1],a[t+2]=s[t+2]+n[2],Math.abs(a[t+2])<d&&(a[t+2]=0)}return{featureIds:i.featureIds?(0,f.QZ)(i.featureIds):[],pointPositions:a}}_extractLegacyPointPositions(e){const t=e.pointData.length,r=(0,f.bg)(3*t),i=new Array;for(let s=0;s<t;s++){const t=e.pointData[s],o=t.featureDataPosition,a=o.length,n=t.geometries?.[0]??ae[a],d=t.featureIds[0];if("Embedded"!==n.type||"points"!==n.params.type||a<2||a>3)continue;const l=n.params.vertexAttributes?.position??[0,0,0],h=3*i.length;r[h]=o[0]+l[0],r[h+1]=o[1]+l[1],r[h+2]=3===a?o[2]+l[2]:NaN,i.push(d)}return{featureIds:i,pointPositions:r}}_validatePositions(e,t,r,i,s){if(null==i&&e.serviceObbInIndexSR)return;const a=t.length;for(let t=0;t<a;t++){const a=3*t;(0,c.i)(ne,r[a],r[a+1],r[a+2]);const n=!Number.isNaN(r[2]);null==i||(n?(0,y.Qg)(i,ne):(0,y.OQ)(i,ne))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&o.Z.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&o.Z.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObbInIndexSR||s.push(ne[0],ne[1],ne[2])}}_createGraphics(e,t,r,i){const s=e.length,o=this._getObjectIdField(),a=this.processor.graphicsCore,n=new Array,d=this.view.spatialReference;for(let h=0;h<s;h++){const s=e[h],u={};null!=s&&(u[o]=s);const c=s??(0,l.D)(),p=3*h,g=isNaN(t[p+2])?void 0:t[p+2],_=(0,x.T)(t[p],t[p+1],g,d),y=this.loadedGraphics.get(c);if(null!=y)(null==y.level||y.level<i)&&(de.property="geometry",de.graphic=y,de.oldValue=y.geometry,de.newValue=_,y.geometry=_,y.level=i,a.graphicUpdateHandler(de)),n.push(y);else{const e=(0,l.D)();n.push({objectId:c,uid:e,geometry:_,attributes:u,visible:!0,nodeIndex:r,level:i})}}return n}_updateNodeMemory(e){e.memory=4096+(null!=e.numFeatures?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){this._memCache.put(this._getMemCacheKey(e.node),e)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode(((e,t)=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)})),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return null==t?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){return this._memCache?.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){this.loadedGraphics.hasNode(e.index)?o.Z.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,r,i),t.attributeInfo=r,this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),oe(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.attributeData}_setAttributeData(e,t){const r=this.loadedGraphics.getNode(e);null!=r?.attributeInfo&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const i=this.loadedGraphics.getNode(e);null!=i&&(await this._i3sOverrides.applyAttributeOverrides(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i))}_attributeValuesChanged(e){oe(e),this._filterNode(e);const{processor:t}=this,{graphicsCore:r}=t;if(r.labelsEnabled){const t=e.node.index,i=new Array;e.graphics.forEach((e=>e.nodeIndex===t&&i.push(e.uid))),r.updateLabelingInfo(i)}t.refreshFilter()}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||m.d}_getGlobalIdField(){return this.layer.associatedLayer?.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every(((e,t)=>s[t]===o[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&o.Z.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,r=this._excludeObjectIdsSorted,i=this._getObjectIdField();for(const o of e.graphics){const e=o.visible,a=!t||this._evaluateClause(t,o),n=null==r||(0,s.$A)(r,o.attributes[i])<0;o.visible=a&&n,e!==o.visible&&(de.graphic=o,de.property="visible",de.oldValue=e,de.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(de))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return null!=this.filter?this.filter.createQuery(e):new w.Z(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t?.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t?.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t?.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(null==e?this.createQuery():w.Z.from(e))}_setupQueryEngine(){const{layer:e,view:t,hasM:r,hasZ:i}=this,{spatialReference:s,resourceController:o}=t,a=new A.s(s,e,o,(()=>this.processor.featureStore),i,r);this._queryEngine=new G.q({context:a,priority:Y.T8.FEATURE_QUERY_ENGINE})}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return.8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,r=await(0,P.Qw)(t,e);(0,P.Z6)(t,r)}get _attributeEditingContext(){const e=this._getObjectIdField(),t=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,globalIdField:t,forEachNode:e=>this.loadedGraphics.forEachNode((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,i)=>{this._setAttributeData(t,r);const s=this.loadedGraphics.getNode(t);if(null!=i){const t=this.loadedGraphics.get(i.attributes[e]);null!=t&&this.processor.graphicsCore.recreateGraphics([t])}else null!=s&&this.processor.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new H.W(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){}};(0,i._)([(0,h.Cb)()],re.prototype,"processor",void 0),(0,i._)([(0,h.Cb)({type:C.Z})],re.prototype,"filter",void 0),(0,i._)([(0,h.Cb)()],re.prototype,"loadedGraphics",void 0),(0,i._)([(0,h.Cb)()],re.prototype,"i3slayer",null),(0,i._)([(0,h.Cb)()],re.prototype,"_controller",void 0),(0,i._)([(0,h.Cb)()],re.prototype,"updating",void 0),(0,i._)([(0,h.Cb)()],re.prototype,"suspended",void 0),(0,i._)([(0,h.Cb)()],re.prototype,"holeFilling",void 0),(0,i._)([(0,h.Cb)(B.q)],re.prototype,"updatingProgress",void 0),(0,i._)([(0,h.Cb)()],re.prototype,"updatingProgressValue",null),(0,i._)([(0,h.Cb)(ee.requiredFields)],re.prototype,"requiredFields",null),(0,i._)([(0,h.Cb)(ee.availableFields)],re.prototype,"availableFields",void 0),(0,i._)([(0,h.Cb)()],re.prototype,"_fieldsHelper",void 0),(0,i._)([(0,h.Cb)({type:Number})],re.prototype,"maximumNumberOfFeatures",null),(0,i._)([(0,h.Cb)({readOnly:!0})],re.prototype,"maximumNumberOfFeaturesExceeded",null),(0,i._)([(0,h.Cb)()],re.prototype,"_excludeObjectIdsSorted",null),(0,i._)([(0,h.Cb)({readOnly:!0})],re.prototype,"lodFactor",null),(0,i._)([(0,h.Cb)({readOnly:!0})],re.prototype,"hasM",null),(0,i._)([(0,h.Cb)({readOnly:!0})],re.prototype,"hasZ",null),(0,i._)([(0,h.Cb)()],re.prototype,"contentVisible",null),(0,i._)([(0,h.Cb)({readOnly:!0})],re.prototype,"legendEnabled",null),re=(0,i._)([(0,u.j)("esri.views.3d.layers.SceneLayerGraphicsView3D")],re);const ie=re;function se(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function oe(e){const t=e.attributeInfo,r=e.node.index;if(null!=t?.loadedAttributes&&null!=t.attributeData)for(let i=0;i<e.graphics.length;i++){const s=e.graphics[i];if(s.nodeIndex===r){s.attributes||(s.attributes={});for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(s.attributes[e]=(0,q.Jx)(t.attributeData[e],i))}}}const ae={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},ne=(0,p.Ue)(),de={graphic:null,property:null,oldValue:null,newValue:null}}}]);